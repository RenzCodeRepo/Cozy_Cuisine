@model Cozy_Cuisine.ViewModels.NewsManagementVM
@{
    Layout = "Admin_Layout";
    ViewData["Title"] = "Dashboard";
}
@* TEMPORARY CSS LANG DASHBOARD *@
<link href="~/css/dashboard.css" rel="stylesheet" />


<form id="noticeForm" method="post" asp-controller="Manage" asp-action="CreateNotice" onsubmit="confirmSubmit(event)">
    <div>
        <label asp-for="NewNotice.Headline"></label>
        <input type="text" asp-for="NewNotice.Headline" class="form-control" placeholder="Enter Headline" required />
    </div>
    <div>
        <label asp-for="NewNotice.Category"></label>
        <select asp-for="NewNotice.Category" class="form-control" required>
            <option value="">Select Category</option>
            <option value="News">News</option>
            <option value="Feature">Feature</option>
            <option value="Update">Update</option>
        </select>
    </div>
    <div>
        <label asp-for="NewNotice.Content"></label>
        <textarea type="text" asp-for="NewNotice.Content" class="form-control" rows="6" placeholder="Enter Content"></textarea>
    </div>

    <div class="form-group">
        <label>News Image URLs</label>
        <div id="imageUrlContainer">
            <div class="input-group mb-2">
                <input type="text" class="form-control" name="newsImageUrls" placeholder="Enter Image URL" />
                <button type="button" class="btn btn-danger" onclick="removeImageUrl(this)">Remove</button>
            </div>
        </div>
        <button type="button" onclick="addImageUrl()" class="btn btn-secondary mt-2">Add Another URL</button>
    </div>

    <!-- Hidden input to hold the final combined string -->
    <input type="hidden" id="URLNewsImageList" asp-for="NewNotice.URLNewsImageList" />


    <div>
        <label asp-for="NewNotice.URLVideo"></label>
        <input type="text" asp-for="NewNotice.URLVideo" class="form-control" placeholder="One GIF link only (Optional):" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<table class="table table-bordered table-hover table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Headline</th>
            <th>Date Posted</th>
            <th>Category</th>
            <th>Content</th>
            <th>URL News Image List</th>
            <th>URL Video</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Notices != null && Model.Notices.Any())
        {
            @foreach (var notice in Model.Notices)
            {

                <tr>
                    <td>@notice.NoticeId</td>
                    <td>@notice.Headline</td>
                    <td>@notice.PostedDate.ToString("MMMM dd, yyyy")</td>
                    <td>@notice.Category</td>
                    <td>@notice.Content</td>
                    <td>
                        @if (!string.IsNullOrEmpty(notice.URLNewsImageList))
                        {
                            var imageUrls = notice.URLNewsImageList.Split(',');
                            foreach (var url in imageUrls)
                            {
                                // Extract File ID from Google Drive URL
                                var fileId = "";
                                var parts = url.Split('/');
                                if (parts.Length >= 6)
                                {
                                    fileId = parts[5];
                                }

                                if (!string.IsNullOrEmpty(fileId))
                                {
                                    var previewUrl = $"https://drive.google.com/file/d/{fileId}/preview";
                                    <iframe src="@previewUrl" width="300" height="200" style="margin-right: 10px; border: none;"></iframe>
                                }
                            }
                        }
                        else
                        {
                            <span>No Image Uploaded</span>
                        }
                    </td>
                    <td>
                        @{
                            var videoUrl = notice.URLVideo;
                            var videoId = "";
                            var embedUrl = "";

                            if (!string.IsNullOrEmpty(videoUrl))
                            {
                                if (videoUrl.Contains("watch?v="))
                                {
                                    var parts = videoUrl.Split("watch?v=");
                                    videoId = parts.Length > 1 ? parts[1] : "";
                                }
                                else if (videoUrl.Contains("youtu.be/"))
                                {
                                    var parts = videoUrl.Split("youtu.be/");
                                    videoId = parts.Length > 1 ? parts[1] : "";
                                }

                                if (!string.IsNullOrEmpty(videoId))
                                {
                                    embedUrl = $"https://www.youtube.com/embed/{videoId}";
                                }
                            }
                        }

                        @if (!string.IsNullOrEmpty(embedUrl))
                        {
                            <iframe width="300" height="170" src="@embedUrl" frameborder="0"
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                    allowfullscreen>
                            </iframe>
                        }
                        else
                        {
                            <span>Invalid or unsupported video URL.</span>
                        }
                    </td>


                    <td>
                        <a asp-action="DetailsNotice" asp-route-id="@notice.NoticeId" class="actionsbtn focus-ring btn btn-sm mb-1"><i class="fa-solid fa-eye fa-sm"></i>View</a>

                        @* opens a modal popup to make the changes *@
                        <button type="button" class="actionsbtn focus-ring btn btn-sm mb-1"
                                data-bs-toggle="modal"
                                data-bs-target="#editNoticeModal"
                                data-id="@notice.NoticeId"
                                data-headline="@notice.Headline"
                                data-postedDate="@notice.PostedDate"
                                data-category="@notice.Category"
                                data-content="@notice.Content"
                                data-urlimg="@notice.URLNewsImageList"
                                data-urlvid="@notice.URLVideo">
                            <i class="fa-solid fa-pen-to-square fa-sm"></i>
                            Edit
                        </button>

                        <form class="d-inline" id="deleteForm-@notice.NoticeId" method="post" asp-action="DeleteNotice" asp-route-id="@notice.NoticeId">
                            <button type="button" class="actionsbtn focus-ring btn btn-sm mb-1" onclick="confirmDelete(event, 'deleteForm-@notice.NoticeId')"><i class="fa-solid fa-trash fa-sm"></i>Delete</button>
                        </form>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@* MODAL POPUP FOR EDITING RECORD *@
<div class="modal fade" id="editNoticeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit News</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editNoticeForm" method="post" asp-action="EditNotice">
                    <input type="hidden" id="noticeId" name="NoticeId">

                    <div class="mb-3">
                        <label class="form-label">Headline</label>
                        <input type="text" class="form-control" id="headline" name="Headline" required>
                    </div>

                    <div>
                        <label asp-for="NewNotice.Category"></label>
                        <select asp-for="NewNotice.Category" id="category" name="Category" class="form-control" required>
                            <option value="">Select Category</option>
                            <option value="News">News</option>
                            <option value="Feature">Feature</option>
                            <option value="Update">Update</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Content</label>
                        <textarea class="form-control" id="content" name="Content" rows="6" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date Posted</label>
                        <input class="form-control" id="postedDate" name="PostedDate" disabled>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Image URLs (one link per new line)</label>
                        <textarea class="form-control modal-dialog-scrollable" rows="10" id="urlimg" name="URLNewsImageList" placeholder="Image URLs (one per new line)"></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">URL Video</label>
                        <input type="text" class="form-control" id="urlvid" name="URLVideo" >
                    </div>

                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>

        function confirmDelete(event, formId) {
            event.preventDefault();

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById(formId).submit();
                }
            });
        }
        function addImageUrl() {
                let container = document.getElementById("imageUrlContainer");

                let div = document.createElement("div");
                div.className = "input-group mb-2";

                let input = document.createElement("input");
                input.type = "text";
                input.name = "newsImageUrls";
                input.className = "form-control";
                input.placeholder = "Enter Image URL";

                let button = document.createElement("button");
                button.type = "button";
                button.className = "btn btn-danger";
                button.innerText = "Remove";
                button.onclick = function () { removeImageUrl(button); };

                div.appendChild(input);
                div.appendChild(button);
                container.appendChild(div);
            }

            function removeImageUrl(button) {
                button.parentElement.remove();
            }

            function prepareFormData() {
                let inputs = document.getElementsByName("newsImageUrls");
                let urlimg = [];

                // Collect all values
                inputs.forEach(input => {
                    if (input.value.trim() !== "") {
                        urlimg.push(input.value.trim());
                    }
                });

                // Set the hidden input value (comma-separated string)
                document.getElementById("URLNewsImageList").value = urlimg.join(",");
            }
         function confirmSubmit(event) {
            event.preventDefault(); // Stop form submission
            prepareFormData();

            Swal.fire({
                title: "Are you sure?",
                text: "You can always delete or edit the record later.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, submit it!"
            }).then((result) => {
                if (result.isConfirmed) {
                     document.getElementById("noticeForm").submit();
                }
            });

            return false; // Prevent immediate submission
        }

    </script>
    <script>
        $(document).ready(function () {
            $(".actionsbtn").click(function () {
                let noticeId = $(this).data("id");
                let headline = $(this).data("headline");
                let postedDate = $(this).data("posteddate");
                let category = $(this).data("category");
                let content = $(this).data("content");
                let urlimg = $(this).data("urlimg");
                let urlvid = $(this).data("urlvid");

                $("#noticeId").val(noticeId);
                $("#headline").val(headline);
                $("#postedDate").val(postedDate);
                $("#category").val(category).trigger("change"); // Ensure select dropdown updates
                $("#content").val(content);
                $("#urlvid").val(urlvid);
                $("#urlimg").val(urlimg ? urlimg.replace(/,/g, "\n") : ""); // Convert CSV to new lines
            });
            $("#editNoticeForm").submit(function () {
                let urlimgField = $("#urlimg");
                let formattedURLs = urlimgField.val().split("\n").map(url => url.trim()).filter(url => url !== "").join(",");
                urlimgField.val(formattedURLs); // Set the value back to CSV format before submitting
            });
        });

    </script>
}